foreach (Event in PendingEvents) {
    if (Event.Type == CMlEvent::Type::MouseClick && ( Event.ControlId == "minimizeButton" || Event.ControlId == "mQuad_2" )) {
		if (eXp_lastClockUpdate != Now) {
            exp_trayId[id] = !exp_trayId[id];

            p2 = EXP_widgetLastPosRel[id][gameMode];
            if (p2.X > 1) {
                diff = 160.0 - p2.X;
            } else {
                diff = -160.0 - (p2.X + sizeX);
            }

            trayAnimActive = True;
            start = Now;
        }
        eXp_lastClockUpdate = Now;
    }
}

if (is_edge_animated == True) {

    if (animActive == False) {
        animActive = True;
        edgeStart = Now;
    }

    if (animActive && edgeStart + 1000 <= Now ) {
        is_edge_animated = False;
        animActive = False;
    }

    if (animActive) {
        p2 = EXP_widgetLastPosRel[id][gameMode];
        declare Text pos = "";
        declare Text scale = "1.";

        declare Real edge = -200.;
        if (p2.X > 1) {
            edge = 200.;
        }

        if (edge_isMinimized) {
            if (exp_trayId[id]) {
                value = edge * AL::Ease("EaseInCirc", (Now - edgeStart) * 1., 0., 1., 200.);
                Window.RelativePosition.X = p2.X + value + diff;
            } else {
                value = edge * AL::Ease("EaseInCirc", (Now - edgeStart) * 1., 0., 1., 200.);
                Window.RelativePosition.X = p2.X + value;
            }
        }
        else {
            if (exp_trayId[id]) {
                value = edge * AL::Ease("EaseOutCirc", (Now - edgeStart) * 1., 1., -1., 200.);
                Window.RelativePosition.X = p2.X + value + diff;
            } else {
                value = edge * AL::Ease("EaseOutCirc", (Now - edgeStart) * 1., 1., -1., 200.);
                Window.RelativePosition.X = p2.X + value;
            }
        }
    }
} else {
    animActive = False;
}

if (!edge_isMinimized) {
    if (exp_trayId[id]) {
        if (trayAnimActive) {
            declare Real value2 = value + diff * AL::Ease("EaseInCirc", (Now - start) * 1., 0., 1., 250.);
            Window.RelativePosition.X = p2.X + value2;
            if (Now - start >= 250.0) {
                trayAnimActive = False;
            }
        }

        if (Window.RelativePosition.X > 0.0) {
            minimizeButton.Size.X = 4.0;
            minimizeButton.Size.Y = sizeY;
            minimizeButton.RelativePosition.X = -2.0;
            minimizeButton.RelativePosition.Y = -(sizeY / 2.0);

            TitleWidget.Size[1] = sizeY - 2.0;
            TitleWidget.RelativePosition.X = -2.0;
            TitleWidget.RelativePosition.Y = -(sizeY / 2.0);
            TitleWidget.RelativeRotation = -90.0;
        } else {
            minimizeButton.Size.X = 4.0;
            minimizeButton.Size.Y = sizeY;
            minimizeButton.RelativePosition.X = sizeX + 2.0;
            minimizeButton.RelativePosition.Y = -(sizeY / 2.0);

            TitleWidget.Size[1] = sizeY - 2.0;
            TitleWidget.RelativePosition.X = sizeX + 2.0;
            TitleWidget.RelativePosition.Y = -(sizeY / 2.0);
            TitleWidget.RelativeRotation = 90.0;
        }
    } else {
        if (trayAnimActive) {
            declare Real value2 = value + diff * AL::Ease("EaseOutCirc", (Now - start) * 1., 1., -1., 250.);
            Window.RelativePosition.X =  p2.X + value2;
            if (Now - start >= 250.0) {
                trayAnimActive = False;
            }
        }

        minimizeButton.Size.X = sizeX;
        minimizeButton.Size.Y = 4.0;
        minimizeButton.RelativePosition.X = sizeX/2.0;
        minimizeButton.RelativePosition.Y = -1.5;

        TitleWidget.Size[1] = sizeX - 2.0;
        TitleWidget.RelativePosition.X = sizeX/2.0;
        TitleWidget.RelativePosition.Y = -1.5;
        TitleWidget.RelativeRotation = 0.0;
    }
}
