declare Integer nbShow = <?php echo $this->nbRecord ?>;
declare Integer curCp = 0;
declare Integer nbFields =  <?php echo $this->nbFields ?>;
declare Integer nbFirstFields =  <?php echo $this->nbFirstFields ?>;
declare Integer worseTime = -1;
declare Boolean getCurrentTimes = <?php echo $this->getCurrentTimes ?>;
declare persistent Boolean edge_showDiff = False;
declare Boolean old_showDiff = edge_showDiff;

//Ranks of the players
declare playerTimes = <?php echo $this->playerTimes ?>;

//The latest chackpoint the player past
declare playerNickName = <?php echo $this->playerNicks ?>;
declare playersOnServer = Text[Text];
declare playersCps = Text[Text];
declare nbCount = 0;

// test
declare Player = Null;
declare Boolean needUpdate = True;
declare lastUpdateTime = 0;

declare Integer animStart = Now;
declare Boolean isStart = False;
declare Boolean isZoom = True;
declare Boolean triggerBegin = True;
declare Integer zoomId = -1;
declare Integer lastZoomId = -2;

declare origPlayerTimes = playerTimes;
origPlayerTimes.clear();

foreach (Login => Score in playerTimes) {
    declare newLogin = TextLib::Replace(Login, "â€“", "-");
    origPlayerTimes[newLogin] = Score;
    playerNickName[newLogin] = playerNickName[Login];
}

playerTimes.clear();
playerTimes = origPlayerTimes;

//Updating currently connected players
foreach (Player in Players) {
    playersOnServer[Player.Login] = Player.Name;

    if(!playerNickName.existskey(Player.Login)){
        playerNickName[Player.Login] = Player.Name;
    }
}

for (i, 1, nbFields ) {
    declare rank = (Page.GetFirstChild("RecRank_"^i) as CMlLabel);
	declare nickLabel = (Page.GetFirstChild("RecNick_"^i) as CMlLabel);
	declare timeLabel = (Page.GetFirstChild("RecTime_"^i) as CMlLabel);
        rank.Opacity = 0.;
        timeLabel.Opacity = 0.;
        nickLabel.Opacity = 0.;
}

isStart = True;
animStart = Now;